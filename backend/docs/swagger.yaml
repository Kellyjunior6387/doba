openapi: 3.0.0
info:
  title: Auth API
  description: API for user authentication and management
  version: 1.0.0
servers:
  - url: http://localhost:5000
paths:
  /:
    get:
      summary: Start the auth
      description: Returns a welcome message
      responses:
        '200':
          description: A welcome message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Bienvenue

  /signup:
    post:
      summary: Register new users
      description: Registers a new user with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: user@example.com
                  message:
                    type: string
                    example: user created
        '400':
          description: Email already registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: email already registered

  /login:
    post:
      summary: Log in a user
      description: Logs in a user and creates a new session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: user@example.com
                  message:
                    type: string
                    example: logged in
          headers:
            Set-Cookie:
              description: Session ID cookie
              schema:
                type: string
        '401':
          description: Invalid login credentials

  /logout:
    delete:
      summary: Log out a user
      description: Logs out a user and destroys their session
      responses:
        '302':
          description: Redirect to home
        '403':
          description: Forbidden

  /profile:
    get:
      summary: Get user profile
      description: Returns a user's email based on session_id in the cookies
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: user@example.com
        '403':
          description: Forbidden

  /reset_password:
    post:
      summary: Generate reset password token
      description: Generates a token for resetting a user's password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
      responses:
        '200':
          description: Reset token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: user@example.com
                  reset_token:
                    type: string
                    example: reset_token_example
        '403':
          description: Forbidden

    put:
      summary: Update password
      description: Updates a user's password using a reset token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                reset_token:
                  type: string
                  example: reset_token_example
                new_password:
                  type: string
                  example: new_password123
      responses:
        '200':
          description: Password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: user@example.com
                  message:
                    type: string
                    example: Password updated
        '403':
          description: Forbidden
